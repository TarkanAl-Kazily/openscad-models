/**
 * This file contains a 2D vector representation of your InkScape file.
 * You can set the global variable "$fn" to alter the precision of the curves.
 * You should use "linear_extrude" or "rotate_extrude" to give it some volume.
 */

// Precision of curves
$fn = 30; // [1:1:50]

// Height of the cat
height = 30; // [1:1:50]

// Thickness of the model
depth = 5; // [1:1:50]

linear_extrude(depth) {
	scale([height/1000, height/1000]) {
		// Group ID: g38
		union() {
			// Group ID: g6
			union() {
				// Path ID: path4
				difference() {
					bezier_polygon([[[817.8, -565.7], [787.6999999999999, -537.4000000000001], [760.8, -530.3000000000001], [728.9, -530.3000000000001]], [[728.9, -530.3000000000001], [728.9, -530.3000000000001], [716.0, -530.6], [726.3, -543.6]], [[726.3, -543.6], [739.9, -560.7], [839.0, -690.0], [837.4, -795.8]], [[837.4, -795.8], [835.6, -918.3], [714.4, -911.3], [714.4, -911.3]], [[714.4, -911.3], [765.4, -814.3], [739.6999999999999, -722.5999999999999], [731.8, -690.5]], [[731.8, -690.5], [716.8, -631.2], [687.1999999999999, -573.8], [642.6999999999999, -518.4]], [[642.6999999999999, -518.4], [587.9, -449.4], [532.5999999999999, -416.59999999999997], [476.79999999999995, -420.2]], [[476.79999999999995, -420.2], [452.9, -379.09999999999997], [431.79999999999995, -346.0], [413.19999999999993, -319.0]], [[413.19999999999993, -319.0], [514.1999999999999, -228.9], [448.3999999999999, -185.3], [391.19999999999993, -10.100000000000023]], [[391.19999999999993, -10.100000000000023], [377.8999999999999, -47.300000000000026], [367.29999999999995, -74.70000000000002], [359.29999999999995, -92.40000000000002]], [[359.29999999999995, -92.40000000000002], [318.9, -87.40000000000002], [229.09999999999997, -87.40000000000002], [188.69999999999996, -92.40000000000002]], [[188.69999999999996, -92.40000000000002], [180.69999999999996, -74.70000000000002], [170.09999999999997, -47.30000000000002], [156.79999999999995, -10.100000000000023]], [[156.79999999999995, -10.100000000000023], [99.4, -185.6], [33.5, -227.9], [135.6, -318.6]], [[135.6, -318.6], [146.5, -524.6], [189.0, -579.4000000000001], [257.7, -678.9000000000001]], [[257.7, -678.9000000000001], [314.3, -760.8000000000001], [300.2, -790.0000000000001], [326.7, -903.2]], [[326.7, -903.2], [125.79999999999998, -1029.8], [466.4, -981.3000000000001], [519.2, -978.7]], [[519.2, -978.7], [655.2, -972.1], [938.9000000000001, -1053.4], [916.3000000000001, -763.9000000000001]], [[916.3000000000001, -763.9000000000001], [909.9, -680.0], [871.9, -617.1], [817.8, -565.7]], [[817.8, -565.7], [817.8, -565.7], [817.8, -565.7], [817.8, -565.7]], [[817.8, -565.7], [817.8, -565.7], [817.8, -565.7], [817.8, -565.7]]]);
					bezier_polygon([[[200.1, -201.8], [137.8, -197.10000000000002], [146.7, -162.4], [177.5, -163.3]], [[177.5, -163.3], [195.1, -163.9], [216.9, -176.10000000000002], [231.9, -201.8]], [[231.9, -201.8], [231.9, -201.8], [200.1, -201.8], [200.1, -201.8]], [[200.1, -201.8], [200.1, -201.8], [200.1, -201.8], [200.1, -201.8]], [[200.1, -201.8], [200.1, -201.8], [200.1, -201.8], [200.1, -201.8]]]);
					bezier_polygon([[[347.5, -201.8], [347.5, -201.8], [315.7, -201.8], [315.7, -201.8]], [[315.7, -201.8], [330.8, -176.20000000000002], [352.59999999999997, -163.9], [370.09999999999997, -163.3]], [[370.09999999999997, -163.3], [400.9, -162.3], [409.7, -197.1], [347.5, -201.8]], [[347.5, -201.8], [347.5, -201.8], [347.5, -201.8], [347.5, -201.8]], [[347.5, -201.8], [347.5, -201.8], [347.5, -201.8], [347.5, -201.8]]]);
				}
			}
		}
	}
}


/**
 * Stripped down version of "bezier_v2.scad".
 * For full version, see: https://www.thingiverse.com/thing:2170645
 */

function BEZ03(u) = pow((1-u), 3);
function BEZ13(u) = 3*u*(pow((1-u),2));
function BEZ23(u) = 3*(pow(u,2))*(1-u);
function BEZ33(u) = pow(u,3);

function bezier_2D_point(p0, p1, p2, p3, u) = [
	BEZ03(u)*p0[0]+BEZ13(u)*p1[0]+BEZ23(u)*p2[0]+BEZ33(u)*p3[0],
	BEZ03(u)*p0[1]+BEZ13(u)*p1[1]+BEZ23(u)*p2[1]+BEZ33(u)*p3[1]
];

function bezier_coordinates(points, steps) = [
	for (c = points)
		for (step = [0:steps])
			bezier_2D_point(c[0], c[1], c[2],c[3], step/steps)
];

module bezier_polygon(points) {
	steps = $fn <= 0 ? 30 : $fn;
	polygon(bezier_coordinates(points, steps));
}
